# Title: changelog/release-changelog.yml
#
# Description:
# This script is designed to generate and manage changelogs using git-cliff.
# It is used in a GitLab CI/CD pipeline.
# It consists of one main stage:
#     1.fetch: Fetch CI scripts from the ci-scripts repository.
#     2.release: Generate a final changelog for the release.
#
# Features:
#     - Generates a final changelog for the release using git-cliff.

stages:
  - fetch
  - release

variables:
  CLIFF_CONFIG_PATH: ".gitlab/ci/config/.cliff.toml"
  CHANGELOG_FILE: "CHANGELOG.md"
  # NOTE: GIT_DEPTH is set to 0 to fetch all history for changelog generation.
  GIT_DEPTH: 0

include:
  - .gitlab/ci/templates/fetch/fetch-ci.yml
  - .gitlab/ci/templates/git/git-config.yml

.default_before_script:
  variables: !reference [.git-config, variables]
  before_script:
    # Install git, configure GitLab CI job token, and update CA certificates.
    - !reference [.git-config, before_script]
    # Install necessary tools
    - |
      apk add --no-cache git-cliff bash > /dev/null 2>&1
      echo "📦 Tool Versions:"
      git-cliff --version
      bash --version

.release_changelog_default_rules:
  rules:
    # Manual trigger for other branches.
    - when: manual

fetch_ci:
  # This job is responsible for fetching the CI scripts from the ci-scripts repository.
  # It clones the ci-scripts repository, copies the necessary files to the current directory.
  # This ensures that the latest CI scripts are always used.  stage: fetch
  stage: fetch
  image: "alpine:latest"
  extends:
    - .release_changelog_default_rules
    - .fetch_ci
  before_script:
    # Install git, configure GitLab CI job token, and update CA certificates.
    - !reference [.git-config, before_script]

generate_changelog_release:
  stage: release
  image: "alpine:latest"
  extends:
    - .default_before_script
    - .release_changelog_default_rules
  needs: [fetch_ci]
  script:
    # Release changelog generation
    - |
      echo "🔍 Checking for .cliff.toml..."
      if [ ! -f "$CLIFF_CONFIG_PATH" ]; then
        echo "❌ $CLIFF_CONFIG_PATH not found. Aborting."
        exit 1
      fi
    # Fetch main branch for comparison
    - |
      echo "📥 Fetching origin/main..."
      git fetch origin main
    # Generate final changelog
    - |
      echo "📝 Generating final changelog..."
      git-cliff --config $CLIFF_CONFIG_PATH  > $CHANGELOG_FILE
      echo "📜 Final changelog generated in $CHANGELOG_FILE."
    # Commit & push updated CHANGELOG.md.
    - |
      echo "🔄 Checking for changes in $CHANGELOG_FILE..."
      if git diff --quiet $CHANGELOG_FILE; then
        echo "ℹ️ No changes in $CHANGELOG_FILE, skipping commit."
        exit 0
      fi
    # Commit & push changes.
    - |
      echo "📦 Committing changes..."
      git add $CHANGELOG_FILE
      git commit -m "docs: update changelog for release [ci skip]"
      git push -o ci.skip origin HEAD:$CI_COMMIT_REF_NAME
      echo "📦 Pushed changes to $CI_COMMIT_REF_NAME."
      echo "✅ Changelog updated successfully."
      echo "📌 Please review the final changelog."
  artifacts:
    paths:
      - $CHANGELOG_FILE
    when: always
    expire_in: 1 week
